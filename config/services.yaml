# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\EventListener\:
        resource: '../src/EventListener'
        arguments: ['@security.token_storage']
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    App\Twig\:
        resource: '../src/Twig'
        tags: ['twig.runtime']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.news:
        class: App\Admin\NewsAdmin
        arguments: [~, App\Entity\News, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: content, label: "Actualités" }

    admin.event:
        class: App\Admin\EventAdmin
        arguments: [~, App\Entity\Event, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: content, label: "Evénements" }

    admin.event_type:
        class: App\Admin\EventTypeAdmin
        arguments: [~, App\Entity\EventType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: referentiel, label: "Type d'événements" }

    admin.link:
        class: App\Admin\LinkAdmin
        arguments: [~, App\Entity\Link, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: referentiel, label: "Liens utiles" }

    admin.menu:
        class: App\Admin\MenuAdmin
        arguments: [~, App\Entity\Menu, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: referentiel, label: "Items du menu" }

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: user, label: "Utilisateurs" }

    admin.circuit:
        class: App\Admin\CircuitAdmin
        arguments: [~, App\Entity\Circuit, ~]
        tags:
            - { name: sonata.admin, manager_type: orm }

    sonata.block.admin_stat:
        class: App\Block\AdminStatBlock
        arguments:
            - '@twig'
            - '@templating'
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: sonata.block }

    sonata.block.link:
        class: App\Block\LinkBlock
        arguments:
            - '@twig'
            - '@templating'
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: sonata.block }

    sonata.block.menu:
        class: App\Block\MenuBlock
        arguments:
            - '@twig'
            - '@templating'
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: sonata.block }

    google.authenticator:
        class: App\Security\GoogleAuthenticator
